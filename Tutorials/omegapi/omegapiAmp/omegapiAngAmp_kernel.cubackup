
#include <stdio.h>

#include "GPUManager/GPUCustomTypes.h"
#include "GPUManager/CUDA-Complex.cuh"


__global__ void
omegapiAngAmp_kernel( GPU_AMP_PROTO, GDouble m_1p, GDouble m_w_1p, GDouble m_n_1p, GDouble m_1m, GDouble m_w_1m, GDouble m_n_1m,
                            GDouble m_0m, GDouble m_w_0m, GDouble m_n_0m, GDouble m_ds_ratio, GDouble m_phi0_1p,
                            GDouble m_theta_1p, GDouble m_phip_1p, GDouble m_phim_1p, GDouble m_psi_1p,
			    GDouble m_phi0_1m, GDouble m_theta_1m, GDouble m_phip_1m, GDouble m_phim_1m,
                            GDouble m_psi_1m, GDouble m_phi0_0m, GDouble m_theta_0m, bool useCutoff, GDouble polAngle, GDouble polFraction ){

  int iEvent = GPU_THIS_EVENT;

  WCUComplex CZero = { 0, 0 };
  WCUComplex COne  = { 1, 0 };

  pcDevAmp[iEvent] = COne;
}


void
omegapiAngAmp_exec( dim3 dimGrid, dim3 dimBlock, GPU_AMP_PROTO, 
                     GDouble m_1p, GDouble m_w_1p, GDouble m_n_1p, GDouble m_1m, GDouble m_w_1m, GDouble m_n_1m,
                            GDouble m_0m, GDouble m_w_0m, GDouble m_n_0m, GDouble m_ds_ratio, GDouble m_phi0_1p,
                            GDouble m_theta_1p, GDouble m_phip_1p, GDouble m_phim_1p, GDouble m_psi_1p,
			    GDouble m_phi0_1m, GDouble m_theta_1m, GDouble m_phip_1m, GDouble m_phim_1m,
                            GDouble m_psi_1m, GDouble m_phi0_0m, GDouble m_theta_0m, bool useCutoff, GDouble polAngle, GDouble polFraction )
{  

  omegapiAngAmp_kernel<<< dimGrid, dimBlock >>>
    ( GPU_AMP_ARGS, m_1p, m_w_1p, m_n_1p, m_1m, m_w_1m, m_n_1m,
                            m_0m, m_w_0m, m_n_0m, m_ds_ratio, m_phi0_1p,
                            m_theta_1p, m_phip_1p, m_phim_1p, m_psi_1p,
			    m_phi0_1m, m_theta_1m, m_phip_1m, m_phim_1m,
                            m_psi_1m, m_phi0_0m, m_theta_0m, useCutoff, polAngle, polFraction );

}
